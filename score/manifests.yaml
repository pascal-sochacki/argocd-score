---
apiVersion: v1
data:
  password: TEFhQXNOYml4TDJ5cDFwdw==
kind: Secret
metadata:
  annotations:
    k8s.score.dev/resource-guid: 05ee22a7-9450-495a-199e-9cad056668c7
    k8s.score.dev/resource-uid: postgres.default#service-a.db
    k8s.score.dev/source-workload: service-a
  labels:
    app.kubernetes.io/instance: pg-service-a-05ee22a7
    app.kubernetes.io/managed-by: score-k8s
    app.kubernetes.io/name: pg-service-a-05ee22a7
  name: pg-service-a-05ee22a7
  namespace: default
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    k8s.score.dev/resource-guid: 05ee22a7-9450-495a-199e-9cad056668c7
    k8s.score.dev/resource-uid: postgres.default#service-a.db
    k8s.score.dev/source-workload: service-a
  labels:
    app.kubernetes.io/instance: pg-service-a-05ee22a7
    app.kubernetes.io/managed-by: score-k8s
    app.kubernetes.io/name: pg-service-a-05ee22a7
  name: pg-service-a-05ee22a7
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: pg-service-a-05ee22a7
  serviceName: pg-service-a-05ee22a7
  template:
    metadata:
      annotations:
        k8s.score.dev/resource-guid: 05ee22a7-9450-495a-199e-9cad056668c7
        k8s.score.dev/resource-uid: postgres.default#service-a.db
        k8s.score.dev/source-workload: service-a
      labels:
        app.kubernetes.io/instance: pg-service-a-05ee22a7
        app.kubernetes.io/managed-by: score-k8s
        app.kubernetes.io/name: pg-service-a-05ee22a7
    spec:
      automountServiceAccountToken: false
      containers:
        - env:
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            - name: POSTGRES_USER
              value: user-xZuEFbAs
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pg-service-a-05ee22a7
            - name: POSTGRES_DB
              value: db-YijYzdCj
          image: mirror.gcr.io/postgres:17-alpine
          name: postgres-db
          ports:
            - containerPort: 5432
              name: postgres
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - user-xZuEFbAs
                - -d
                - db-YijYzdCj
            periodSeconds: 3
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            runAsGroup: 1000
            runAsUser: 1000
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pv-data
      securityContext:
        fsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
  volumeClaimTemplates:
    - metadata:
        annotations:
          k8s.score.dev/resource-guid: 05ee22a7-9450-495a-199e-9cad056668c7
          k8s.score.dev/resource-uid: postgres.default#service-a.db
          k8s.score.dev/source-workload: service-a
        labels:
          app.kubernetes.io/instance: pg-service-a-05ee22a7
          app.kubernetes.io/managed-by: score-k8s
          app.kubernetes.io/name: pg-service-a-05ee22a7
        name: pv-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    k8s.score.dev/resource-guid: 05ee22a7-9450-495a-199e-9cad056668c7
    k8s.score.dev/resource-uid: postgres.default#service-a.db
    k8s.score.dev/source-workload: service-a
  labels:
    app.kubernetes.io/instance: pg-service-a-05ee22a7
    app.kubernetes.io/managed-by: score-k8s
    app.kubernetes.io/name: pg-service-a-05ee22a7
  name: pg-service-a-05ee22a7
  namespace: default
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app.kubernetes.io/instance: pg-service-a-05ee22a7
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    k8s.score.dev/workload-name: service-a
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: service-a-21d08c724c
    app.kubernetes.io/managed-by: score-k8s
    app.kubernetes.io/name: service-a
  name: service-a
  namespace: default
spec:
  ports:
    - name: www
      port: 8080
      protocol: TCP
      targetPort: 3000
  selector:
    app.kubernetes.io/instance: service-a-21d08c724c
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    k8s.score.dev/workload-name: service-a
  creationTimestamp: null
  labels:
    app.kubernetes.io/instance: service-a-21d08c724c
    app.kubernetes.io/managed-by: score-k8s
    app.kubernetes.io/name: service-a
  name: service-a
  namespace: default
spec:
  selector:
    matchLabels:
      app.kubernetes.io/instance: service-a-21d08c724c
  strategy: {}
  template:
    metadata:
      annotations:
        k8s.score.dev/workload-name: service-a
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: service-a-21d08c724c
        app.kubernetes.io/managed-by: score-k8s
        app.kubernetes.io/name: service-a
    spec:
      containers:
        - env:
            - name: DB_DATABASE
              value: db-YijYzdCj
            - name: DB_HOST
              value: pg-service-a-05ee22a7
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: password
                  name: pg-service-a-05ee22a7
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              value: user-xZuEFbAs
          image: nginx
          name: hello-world
          resources: {}
status: {}
